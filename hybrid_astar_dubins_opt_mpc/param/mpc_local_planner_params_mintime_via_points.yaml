MpcLocalPlannerROS:

  odom_topic: odom #机器人的里程计话题名称

## Robot settings
robot:
  type: "unicycle"
  unicycle:
    max_vel_x: 0.3
    max_vel_x_backwards: 0.05
    max_vel_theta: 0.3
    acc_lim_x: 0.5 # deactive bounds with zero
    dec_lim_x: 0.5 # deactive bounds with zero
    acc_lim_theta: 0.5 # deactivate bounds with zero
  simple_car:
    wheelbase: 0.4
    front_wheel_driving: False
    max_vel_x: 0.4
    max_vel_x_backwards: 0.2
    max_steering_angle: 1.4
    acc_lim_x: 0.0 # deactive bounds with zero
    dec_lim_x: 0.0 # deactive bounds with zero
    max_steering_rate: 0.5 # deactive bounds with zero
  kinematic_bicycle_vel_input:
    length_rear: 1.0
    length_front: 1.0
    max_vel_x: 0.4
    max_vel_x_backwards: 0.2
    max_steering_angle: 1.4
    acc_lim_x: 0.0 # deactive bounds with zero
    dec_lim_x: 0.0 # deactive bounds with zero
    max_steering_rate: 0.5 # deactive bounds with zero

## Footprint model for collision avoidance
  footprint_model: 
    type: "polygon" #足迹模型的类型，可以是point、circular、two_circles、line或polygon。
    radius: 0.36 # for type "circular" 当足迹模型类型为circular时的半径。
    line_start: [-0.3, 0.0] # for type "line" 该参数指定了线段的起点坐标，以机器人为参考系 当足迹模型类型为line时的起点坐标。
    line_end: [0.3, 0.0] # for type "line" 该参数指定了线段的终点坐标，以机器人为参考系 当足迹模型类型为line时的终点坐标。
    front_offset: 0.2 # for type "two_circles" 当足迹模型类型为two_circles时前圆心偏移量。
    front_radius: 0.2 # for type "two_circles" 当足迹模型类型为two_circles时前圆半径。
    rear_offset: 0.0 # for type "two_circles" 当足迹模型类型为two_circles时后圆心偏移量。
    rear_radius: 0.2 # for type "two_circles" 当足迹模型类型为two_circles时后圆半径。
    vertices: [[0.36, 0.29], [-0.36, 0.29], [-0.36, -0.29], [0.36, -0.29]] # for type "polygon" 当足迹模型类型为polygon时的顶点坐标。
    is_footprint_dynamic: False #足迹是否是动态的。

collision_avoidance:
  min_obstacle_dist: 0.5 # Note, this parameter must be chosen w.r.t. the footprint_model
  enable_dynamic_obstacles: False
  force_inclusion_dist: 0.5
  cutoff_dist: 2.5 
#  必须设置为True后才能规避实时探测到的、建图时不存在的障碍物
  include_costmap_obstacles: True #是否考虑costmap中的障碍
  costmap_obstacles_behind_robot_dist: 1.5 #机器人后方的代价地图障碍物距离。
  collision_check_no_poses: 5 #碰撞检查的位姿数量。

## Planning grid 
grid:
  type: "fd_grid"
  grid_size_ref: 20
  dt_ref: 0.3
  xf_fixed: [True, True, True] # E.g., set last one to False in order to unfix the final orientation
  warm_start: True
  collocation_method: "forward_differences"
  cost_integration_method: "left_sum"
  variable_grid:
    enable: True  
    min_dt: 0.0;
    max_dt: 10.0;
    grid_adaptation:
      enable: True
      dt_hyst_ratio: 0.1
      min_grid_size: 2
      max_grid_size: 50
 

## Planning options
planning:
  objective:
    type: "minimum_time_via_points" # minimum_time requires grid/variable_grid/enable=True and grid/xf_fixed set properly
    quadratic_form:
      state_weights: [2.0, 2.0, 2.0]
      control_weights: [1.0, 1.0]
      integral_form: False
      hybrid_cost_minimum_time: False
    minimum_time_via_points:
      position_weight: 10.0
      orientation_weight: 8.0
      via_points_ordered: True #严格按照给定的顺序通过这些点
  terminal_cost:
    type: "quadratic" # can be "none"
    quadratic:
      final_state_weights: [2.0, 2.0, 2.0]
  terminal_constraint:
    type: "none" # can be "none"
    l2_ball:
      weight_matrix: [1.0, 1.0, 1.0]
      radius: 5
      

## Controller options
controller:
  outer_ocp_iterations: 5
  xy_goal_tolerance: 0.15
  yaw_goal_tolerance: 0.1
  force_reinit_new_goal_dist: 1.5
  force_reinit_new_goal_angular: 1.57
  force_reinit_num_steps: 0
  global_plan_overwrite_orientation: False
  global_plan_viapoint_sep: 0.1
  allow_init_with_backward_motion: True
  publish_ocp_results: False
  print_cpu_time: False
  global_plan_prune_distance: 1.2 #全局路径修剪距离。
  max_global_plan_lookahead_dist: 2.0
  prefer_x_feedback: False ##是否优先使用x反馈。
  
## Solver settings
solver:
  type: "ipopt"
  ipopt:
    iterations: 100
    max_cpu_time: -1.0
    ipopt_numeric_options:
      tol: 1e-4
    ipopt_string_options:
      linear_solver: "mumps"
      hessian_approximation: "limited-memory" # exact or limited-memory
    ipopt_integer_options:
      print_level: 2
  lsq_lm:
    iterations: 10
    weight_init_eq: 2
    weight_init_ineq: 2
    weight_init_bounds: 2
    weight_adapt_factor_eq: 1.5
    weight_adapt_factor_ineq: 1.5
    weight_adapt_factor_bounds: 1.5
    weight_adapt_max_eq: 500
    weight_adapt_max_ineq: 500
    weight_adapt_max_bounds: 500


